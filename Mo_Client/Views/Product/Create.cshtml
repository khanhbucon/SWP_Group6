@model Mo_Client.Services.AuthApiClient.CreateProductRequest
@{
    ViewData["Title"] = "Thêm sản phẩm";
    Layout = "~/Views/Seller/_SellerLayout.cshtml";
}

<div class="page-header mb-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Seller" asp-action="Shops">Gian hàng</a></li>
            <li class="breadcrumb-item active">Thêm sản phẩm</li>
        </ol>
    </nav>
    <h4 class="mb-0">
        <i class="fas fa-plus-circle me-2 text-success"></i>Thêm sản phẩm mới
    </h4>
</div>

<div class="card border-0 shadow-sm">
    <div class="card-header bg-gradient-success text-white">
        <h5 class="mb-0">
            <i class="fas fa-box me-2"></i>Thông tin sản phẩm
        </h5>
    </div>
    <div class="card-body p-4">
        <form asp-action="Create" method="post" class="needs-validation" novalidate enctype="multipart/form-data">
            <input asp-for="ShopId" type="hidden" value="@ViewBag.ShopId" />

            <div class="row g-4">
                <div class="col-md-6">
                    <div class="form-floating">
                        <input asp-for="Name" class="form-control form-control-lg" placeholder="Nhập tên sản phẩm" />
                        <label asp-for="Name">
                            <i class="fas fa-tag me-2"></i>Tên sản phẩm
                        </label>
                        <span asp-validation-for="Name" class="text-danger small"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating">
                        <input asp-for="SubCategoryId" class="form-control form-control-lg" placeholder="Nhập ID danh mục" />
                        <label asp-for="SubCategoryId">
                            <i class="fas fa-list me-2"></i>Danh mục (ID)
                        </label>
                        <div class="form-text">
                            <i class="fas fa-info-circle me-1"></i>
                            Tạm thời nhập ID SubCategory - sẽ cải thiện thành dropdown
                        </div>
                        <span asp-validation-for="SubCategoryId" class="text-danger small"></span>
                    </div>
                </div>

                <!-- Mô tả ngắn -->
                <div class="col-12">
                    <label class="form-label fw-bold">
                        <i class="fas fa-file-alt me-2"></i>Mô tả ngắn*
                    </label>
                    <input asp-for="ShortDescription" class="form-control form-control-lg" 
                           placeholder="Nhập mô tả ngắn gọn về sản phẩm..." maxlength="200" />
                    <div class="form-text">Mô tả ngắn gọn, súc tích về sản phẩm (tối đa 200 ký tự)</div>
                    <span asp-validation-for="ShortDescription" class="text-danger small"></span>
                </div>

                <!-- Mô tả chi tiết với Rich Text Editor -->
                <div class="col-12">
                    <label class="form-label fw-bold">
                        <i class="fas fa-align-left me-2"></i>Mô tả chi tiết*
                    </label>
                    <div class="rich-editor-container">
                        <div class="editor-toolbar">
                            <div class="btn-group btn-group-sm" role="group">
                                <button type="button" class="btn btn-outline-secondary" data-command="bold" title="Bold">
                                    <i class="fas fa-bold"></i>
                                </button>
                                <button type="button" class="btn btn-outline-secondary" data-command="italic" title="Italic">
                                    <i class="fas fa-italic"></i>
                                </button>
                                <button type="button" class="btn btn-outline-secondary" data-command="underline" title="Underline">
                                    <i class="fas fa-underline"></i>
                                </button>
                            </div>
                            <div class="btn-group btn-group-sm" role="group">
                                <button type="button" class="btn btn-outline-secondary" data-command="justifyLeft" title="Align Left">
                                    <i class="fas fa-align-left"></i>
                                </button>
                                <button type="button" class="btn btn-outline-secondary" data-command="justifyCenter" title="Align Center">
                                    <i class="fas fa-align-center"></i>
                                </button>
                                <button type="button" class="btn btn-outline-secondary" data-command="justifyRight" title="Align Right">
                                    <i class="fas fa-align-right"></i>
                                </button>
                            </div>
                            <div class="btn-group btn-group-sm" role="group">
                                <button type="button" class="btn btn-outline-secondary" data-command="insertUnorderedList" title="Bullet List">
                                    <i class="fas fa-list-ul"></i>
                                </button>
                                <button type="button" class="btn btn-outline-secondary" data-command="insertOrderedList" title="Numbered List">
                                    <i class="fas fa-list-ol"></i>
                                </button>
                            </div>
                            <div class="btn-group btn-group-sm" role="group">
                                <button type="button" class="btn btn-outline-secondary" data-command="createLink" title="Insert Link">
                                    <i class="fas fa-link"></i>
                                </button>
                                <button type="button" class="btn btn-outline-secondary" data-command="insertImage" title="Insert Image">
                                    <i class="fas fa-image"></i>
                                </button>
                            </div>
                        </div>
                        <div class="editor-content" contenteditable="true" 
                             style="min-height: 200px; border: 1px solid #ced4da; padding: 12px; border-radius: 0 0 6px 6px;">
                        </div>
                        <textarea asp-for="DetailedDescription" class="d-none" id="hiddenDetailedDescription"></textarea>
                    </div>
                    <div class="form-text">Mô tả chi tiết về sản phẩm, tính năng, ưu điểm...</div>
                    <span asp-validation-for="DetailedDescription" class="text-danger small"></span>
                </div>

                <!-- Upload ảnh gian hàng -->
                <div class="col-12">
                    <label class="form-label fw-bold">
                        <i class="fas fa-camera me-2"></i>Ảnh gian hàng <span class="text-muted">(Kích thước lớn hơn 320px.)</span>
                    </label>
                    <div class="upload-area">
                        <input type="file" id="productImage" accept="image/*" class="d-none" />
                        <div class="upload-placeholder" onclick="document.getElementById('productImage').click()">
                            <i class="fas fa-cloud-upload-alt fa-2x text-muted mb-2"></i>
                            <p class="mb-0 text-muted">Choose file</p>
                            <small class="text-muted">Hoặc kéo thả ảnh vào đây</small>
                        </div>
                        <div class="image-preview d-none">
                            <img src="" alt="Preview" class="img-thumbnail" style="max-width: 200px;" />
                            <button type="button" class="btn btn-sm btn-danger mt-2" onclick="removeImage()">
                                <i class="fas fa-trash"></i> Xóa ảnh
                            </button>
                        </div>
                    </div>
                    <input asp-for="ImageUrl" type="hidden" />
                </div>

                <div class="col-md-6">
                    <div class="form-floating">
                        <input asp-for="Price" class="form-control form-control-lg" placeholder="0" step="0.01" />
                        <label asp-for="Price">
                            <i class="fas fa-dollar-sign me-2"></i>Giá bán (VNĐ)
                        </label>
                        <span asp-validation-for="Price" class="text-danger small"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating">
                        <input asp-for="Stock" class="form-control form-control-lg" placeholder="0" />
                        <label asp-for="Stock">
                            <i class="fas fa-warehouse me-2"></i>Số lượng tồn kho
                        </label>
                        <span asp-validation-for="Stock" class="text-danger small"></span>
                    </div>
                </div>
            </div>

            <div class="d-flex gap-3 mt-4 pt-3 border-top">
                <button class="btn btn-success btn-lg px-4" type="submit">
                    <i class="fas fa-save me-2"></i>Thêm sản phẩm
                </button>
                <a class="btn btn-outline-secondary btn-lg px-4" asp-controller="Seller" asp-action="Shops">
                    <i class="fas fa-arrow-left me-2"></i>Quay lại
                </a>
            </div>
        </form>
    </div>
</div>

<style>
.bg-gradient-success {
    background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
}

.page-header {
    margin-bottom: 2rem;
}

.breadcrumb {
    background: transparent;
    padding: 0;
    margin: 0;
}

.breadcrumb-item a {
    color: #6c757d;
    text-decoration: none;
}

.breadcrumb-item a:hover {
    color: #495057;
}

.card {
    border-radius: 12px;
    overflow: hidden;
}

.card-header {
    border: none;
    padding: 1.5rem 2rem;
}

.form-floating > label {
    font-weight: 500;
    color: #495057;
}

.form-control:focus {
    border-color: #28a745;
    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
}

/* Rich Editor Styles */
.rich-editor-container {
    border: 1px solid #ced4da;
    border-radius: 6px;
    overflow: hidden;
}

.editor-toolbar {
    background: #f8f9fa;
    padding: 8px 12px;
    border-bottom: 1px solid #ced4da;
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
}

.editor-toolbar .btn {
    border-radius: 4px;
    border: 1px solid #dee2e6;
    background: white;
    color: #495057;
    min-width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.editor-toolbar .btn:hover {
    background-color: #e9ecef;
    border-color: #adb5bd;
    color: #212529;
}

.editor-toolbar .btn.active {
    background-color: #28a745;
    border-color: #28a745;
    color: white;
    box-shadow: inset 0 1px 2px rgba(0,0,0,0.1);
}

.editor-toolbar .btn:focus {
    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
    outline: none;
}

.editor-content {
    min-height: 200px;
    padding: 12px;
    outline: none;
    background: white;
}

.editor-content:focus {
    box-shadow: inset 0 0 0 1px #28a745;
}

/* Upload Area Styles */
.upload-area {
    border: 2px dashed #ced4da;
    border-radius: 8px;
    padding: 2rem;
    text-align: center;
    transition: all 0.3s ease;
    cursor: pointer;
}

.upload-area:hover {
    border-color: #28a745;
    background-color: #f8fff8;
}

.upload-area.dragover {
    border-color: #28a745;
    background-color: #e8f5e8;
}

.upload-placeholder {
    padding: 1rem;
}

.btn-success {
    background: linear-gradient(45deg, #28a745, #20c997);
    border: none;
    font-weight: 600;
    transition: all 0.3s ease;
}

.btn-success:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
}

.btn-outline-secondary {
    border-width: 2px;
    font-weight: 600;
    transition: all 0.3s ease;
}

.btn-outline-secondary:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(108, 117, 125, 0.2);
}

.form-text {
    margin-top: 0.5rem;
    font-size: 0.875rem;
}

@@media (max-width: 768px) {
    .card-body {
        padding: 1.5rem !important;
    }
    
    .d-flex.gap-3 {
        flex-direction: column;
    }
    
    .btn-lg {
        width: 100%;
    }
    
    .editor-toolbar {
        padding: 6px;
        gap: 4px;
    }
    
    .editor-toolbar .btn-group {
        margin-bottom: 4px;
    }
}
</style>

<script>
// Rich Text Editor functionality
document.addEventListener('DOMContentLoaded', function() {
    const toolbar = document.querySelector('.editor-toolbar');
    const editor = document.querySelector('.editor-content');
    const hiddenTextarea = document.getElementById('hiddenDetailedDescription');

    // Make editor focusable and editable
    editor.setAttribute('contenteditable', 'true');
    editor.style.outline = 'none';
    
    // Initialize editor content
    if (hiddenTextarea.value) {
        editor.innerHTML = hiddenTextarea.value;
    }
    
    // Add placeholder text
    if (!editor.innerHTML.trim()) {
        editor.innerHTML = '<p>Nhập mô tả chi tiết về sản phẩm...</p>';
        editor.style.color = '#6c757d';
    }
    
    // Handle placeholder
    editor.addEventListener('focus', function() {
        if (editor.innerHTML === '<p>Nhập mô tả chi tiết về sản phẩm...</p>') {
            editor.innerHTML = '';
            editor.style.color = '#212529';
        }
    });
    
    editor.addEventListener('blur', function() {
        if (!editor.innerHTML.trim() || editor.innerHTML === '<br>') {
            editor.innerHTML = '<p>Nhập mô tả chi tiết về sản phẩm...</p>';
            editor.style.color = '#6c757d';
        }
    });

    // Toolbar button handlers
    toolbar.addEventListener('click', function(e) {
        e.preventDefault();
        const button = e.target.closest('button[data-command]');
        if (button) {
            const command = button.getAttribute('data-command');
            
            // Clear placeholder if present
            if (editor.innerHTML === '<p>Nhập mô tả chi tiết về sản phẩm...</p>') {
                editor.innerHTML = '';
                editor.style.color = '#212529';
            }
            
            editor.focus();
            
            // Handle special commands
            if (command === 'createLink') {
                const selection = window.getSelection();
                if (selection.toString().length === 0) {
                    alert('Vui lòng chọn text trước khi tạo link');
                    return;
                }
                const url = prompt('Nhập URL:');
                if (url) {
                    document.execCommand(command, false, url);
                }
            } else if (command === 'insertImage') {
                const url = prompt('Nhập URL ảnh:');
                if (url) {
                    document.execCommand(command, false, url);
                }
            } else if (command === 'formatBlock') {
                const format = button.getAttribute('data-value') || 'p';
                document.execCommand(command, false, format);
            } else {
                document.execCommand(command, false, null);
            }
            
            // Toggle button state
            button.classList.toggle('active');
            
            updateTextarea();
        }
    });

    // Update hidden textarea
    function updateTextarea() {
        let content = editor.innerHTML;
        // Don't save placeholder text
        if (content === '<p>Nhập mô tả chi tiết về sản phẩm...</p>') {
            content = '';
        }
        hiddenTextarea.value = content;
    }

    // Update toolbar button states on selection change
    document.addEventListener('selectionchange', function() {
        if (document.activeElement === editor) {
            const buttons = toolbar.querySelectorAll('button[data-command]');
            buttons.forEach(button => {
                const command = button.getAttribute('data-command');
                try {
                    if (document.queryCommandState(command)) {
                        button.classList.add('active');
                    } else {
                        button.classList.remove('active');
                    }
                } catch (e) {
                    // Some commands might not be supported
                }
            });
        }
    });

    // Editor event handlers
    editor.addEventListener('input', updateTextarea);
    
    // Handle Enter key for better formatting
    editor.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' && !e.shiftKey) {
            // Let default behavior happen, but ensure we're in a paragraph
            setTimeout(updateTextarea, 10);
        }
    });
    
    // Prevent dropping files directly into editor
    editor.addEventListener('drop', function(e) {
        e.preventDefault();
    });

    // Image upload functionality
    const fileInput = document.getElementById('productImage');
    const uploadArea = document.querySelector('.upload-area');
    const uploadPlaceholder = document.querySelector('.upload-placeholder');
    const imagePreview = document.querySelector('.image-preview');
    const imageUrlInput = document.querySelector('input[name="ImageUrl"]');

    fileInput.addEventListener('change', handleFileSelect);
    uploadArea.addEventListener('dragover', handleDragOver);
    uploadArea.addEventListener('drop', handleDrop);

    function handleFileSelect(e) {
        const file = e.target.files[0];
        if (file && file.type.startsWith('image/')) {
            displayImage(file);
        }
    }

    function handleDragOver(e) {
        e.preventDefault();
        uploadArea.classList.add('dragover');
    }

    function handleDrop(e) {
        e.preventDefault();
        uploadArea.classList.remove('dragover');
        const files = e.dataTransfer.files;
        if (files.length > 0 && files[0].type.startsWith('image/')) {
            displayImage(files[0]);
        }
    }

    function displayImage(file) {
        const reader = new FileReader();
        reader.onload = function(e) {
            const img = imagePreview.querySelector('img');
            img.src = e.target.result;
            uploadPlaceholder.classList.add('d-none');
            imagePreview.classList.remove('d-none');
            imageUrlInput.value = e.target.result; // In real app, upload to server
        };
        reader.readAsDataURL(file);
    }

    window.removeImage = function() {
        uploadPlaceholder.classList.remove('d-none');
        imagePreview.classList.add('d-none');
        fileInput.value = '';
        imageUrlInput.value = '';
    };
});
</script>
