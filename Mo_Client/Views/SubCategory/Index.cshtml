@{
    ViewData["Title"] = "Quản lý SubCategory (Seller)";
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header d-flex justify-content-between align-items-center"
             style="background-color: #007bff; color: white;">
            <h5 class="mb-0">Quản lý SubCategory (Seller)</h5>
            <button class="btn btn-light btn-sm" data-bs-toggle="modal" data-bs-target="#modalAdd">
                + Thêm mới
            </button>
        </div>

        <div class="card-body">
            <div class="input-group mb-3">
                <input id="searchInput" type="text" class="form-control" placeholder="Tìm kiếm SubCategory...">
                <button class="btn btn-outline-secondary" type="button" id="btnSearch">Tìm</button>
            </div>

            <table class="table table-striped align-middle text-center">
                <thead style="background-color: #cfe2ff;">
                    <tr>
                        <th>ID</th>
                        <th>Tên SubCategory</th>
                        <th>Category ID</th>
                        <th>Trạng thái</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody id="subTableBody">
                    <tr>
                        <td colspan="5" class="text-muted">Đang tải dữ liệu...</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal Thêm / Sửa -->
<div class="modal fade" id="modalAdd" tabindex="-1" aria-labelledby="modalAddLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="modalAddLabel">Thêm / Sửa SubCategory</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="formSubCategory">
                    <input type="hidden" id="subId" />
                    <div class="mb-3">
                        <label class="form-label">Tên SubCategory</label>
                        <input id="subName" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Category ID</label>
                        <input id="categoryId" class="form-control" type="number" required />
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="isActive" checked />
                        <label class="form-check-label">Hoạt động</label>
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Lưu</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap + JS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    const apiBase = "https://localhost:7234/api/SubCategory"; // ✅ Đúng cổng API thật

    const tbody = document.getElementById("subTableBody");
    const modal = new bootstrap.Modal(document.getElementById("modalAdd"));
    const form = document.getElementById("formSubCategory");

    // 🟢 Lấy danh sách
    async function loadSubCategories() {
        tbody.innerHTML = `<tr><td colspan="5" class="text-muted">Đang tải...</td></tr>`;
        const res = await fetch(apiBase);
        const data = await res.json();

        if (!data.length) {
            tbody.innerHTML = `<tr><td colspan="5" class="text-muted">Không có dữ liệu</td></tr>`;
            return;
        }

        tbody.innerHTML = "";
        data.forEach(sub => {
            const row = `
                <tr>
                    <td>${sub.id}</td>
                    <td>${sub.name}</td>
                    <td>${sub.categoryId}</td>
                    <td>
                        ${sub.isActive ? '<span class="badge bg-success">Hoạt động</span>'
                                       : '<span class="badge bg-secondary">Tạm ẩn</span>'}
                    </td>
                    <td>
                        <button class="btn btn-warning btn-sm me-1" onclick="editSub(${sub.id})">Sửa</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteSub(${sub.id})">Xóa</button>
                    </td>
                </tr>`;
            tbody.insertAdjacentHTML("beforeend", row);
        });
    }

    // 🟡 Thêm / Cập nhật
    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const id = document.getElementById("subId").value;
        const body = {
            name: document.getElementById("subName").value,
            categoryId: parseInt(document.getElementById("categoryId").value),
            isActive: document.getElementById("isActive").checked
        };

        const method = id ? "PUT" : "POST";
        const url = id ? `${apiBase}/${id}` : apiBase;

          const res = await fetch(url, {
        method,
        headers: {
            "Accept": "application/json",
            "Content-Type": "application/json"
        },
        body: JSON.stringify(body)
    });

    if (res.ok) {
        alert(id ? "Cập nhật thành công!" : "Thêm mới thành công!");
        modal.hide();
        loadSubCategories();
    } else {
        const err = await res.text();
        console.error("Lỗi thêm/cập nhật:", err);
        alert("Lỗi khi lưu SubCategory!");
    }


        modal.hide();
        loadSubCategories();
    });

    // ✏️ Sửa
    async function editSub(id) {
        const res = await fetch(`${apiBase}/${id}`);
        const sub = await res.json();
        document.getElementById("subId").value = sub.id;
        document.getElementById("subName").value = sub.name;
        document.getElementById("categoryId").value = sub.categoryId;
        document.getElementById("isActive").checked = sub.isActive;
        modal.show();
    }

    // ❌ Xóa
    async function deleteSub(id) {
        if (confirm("Bạn có chắc muốn xóa SubCategory này?")) {
            await fetch(`${apiBase}/${id}`, { method: "DELETE" });
            loadSubCategories();
        }
    }

    // 🔍 Tìm kiếm
    document.getElementById("btnSearch").addEventListener("click", () => {
        const keyword = document.getElementById("searchInput").value.toLowerCase();
        Array.from(tbody.rows).forEach(row => {
            const text = row.innerText.toLowerCase();
            row.style.display = text.includes(keyword) ? "" : "none";
        });
    });

    loadSubCategories();
</script>
